local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer

-- Create the main ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "XGui" -- Changed from "FGui" to "XGui"
gui.ResetOnSpawn = false -- Ensure the GUI doesn't disappear on reset
gui.Parent = CoreGui -- Set the GUI parent to CoreGui for the nicer look

-- Create the main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0.5, -100, 0.5, -50)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
frame.BackgroundTransparency = 0.5 -- Slightly transparent
frame.BorderSizePixel = 2
frame.BorderColor3 = Color3.fromRGB(128, 128, 128) -- Grey outline
frame.Active = true
frame.Draggable = true -- Make the frame draggable
frame.Parent = gui

-- Add rounded corners to the main frame
local UICornerOuter = Instance.new("UICorner")
UICornerOuter.CornerRadius = UDim.new(0, 20)
UICornerOuter.Parent = frame

-- Create the main button
local xButton = Instance.new("TextButton")
xButton.Name = "XButton" -- Changed from "FButton" to "XButton"
xButton.Size = UDim2.new(0, 180, 0, 60)
xButton.Position = UDim2.new(0.5, -90, 0.5, -30)
xButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Dark grey background
xButton.BorderSizePixel = 0
xButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
xButton.Text = "X Gui" -- Changed from "F Gui" to "X Gui"
xButton.Font = Enum.Font.SourceSans
xButton.TextSize = 24
xButton.TextScaled = true -- Makes the text larger
xButton.Parent = frame

-- Add rounded corners to the button
local UICornerButton = Instance.new("UICorner")
UICornerButton.CornerRadius = UDim.new(0, 10)
UICornerButton.Parent = xButton

-- Button click event
xButton.MouseButton1Click:Connect(function()
    local vim = game:GetService("VirtualInputManager")
    vim:SendKeyEvent(true, Enum.KeyCode.X, false, game) -- Changed from "F" to "X"
end)

-- Key press event to send the key press
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.X then -- Key to send
        local vim = game:GetService("VirtualInputManager")
        vim:SendKeyEvent(true, Enum.KeyCode.X, false, game) -- Changed from "F" to "X"
    end
end)

-- Variable to track if the notification has been shown
local notificationShown = false

-- Chat command to kill the GUI
player.Chatted:Connect(function(message)
    if message:lower() == "/e killgui" then
        if gui then
            gui:Destroy()
            if not notificationShown then
                -- Display notification
                StarterGui:SetCore("SendNotification", {
                    Title = "Info";
                    Text = "GUI has been removed.";
                    Duration = 15; -- 15 seconds notification
                })
                notificationShown = true
            end
        end
    end
end)

-- Display notification when the GUI is created
StarterGui:SetCore("SendNotification", {
    Title = "Info";
    Text = "Type /e killgui To Kill The Gui";
    Duration = 15; -- 15 seconds notification
})end)

-- Display notification when the GUI is created
StarterGui:SetCore("SendNotification", {
    Title = "Info";
    Text = "Type /e killgui To Kill The Gui";
    Duration = 15; -- 15 seconds notification
})
